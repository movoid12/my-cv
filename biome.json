{
  "$schema": "./node_modules/@biomejs/biome/configuration_schema.json",
  "vcs": {
    "enabled": true,
    "clientKind": "git",
    "defaultBranch": "main",
    "useIgnoreFile": true
  },
  "formatter": {
    "indentStyle": "space"
  },
  "linter": {
    "rules": {
      "complexity": {
        "noUselessStringConcat": "warn",
        "noUselessUndefinedInitialization": "warn",
        "useSimplifiedLogicExpression": "warn"
      },
      "correctness": {
        "noConstantMathMinMaxClamp": "error",
        "noUnusedImports": "error",
        "noUnusedVariables": "error",
        "useArrayLiterals": "error",
        "useHookAtTopLevel": "error"
      },
      "performance": {
        "noBarrelFile": "error",
        "noReExportAll": "error"
      },
      "style": {
        "noNegationElse": "warn",
        "noYodaExpression": "warn",
        "useBlockStatements": "warn",
        "useCollapsedElseIf": "warn",
        "useConsistentArrayType": "warn",
        "useConsistentBuiltinInstantiation": "warn",
        "useExplicitLengthCheck": "warn",
        "useFilenamingConvention": {
          "level": "warn",
          "options": {
            "filenameCases": ["kebab-case"]
          }
        },
        "useForOf": "warn",
        "useFragmentSyntax": "warn",
        "useNamingConvention": {
          "level": "warn",
          "options": {
            "conventions": [
              {
                "selector": {
                  "kind": "objectLiteralProperty"
                },
                "formats": ["camelCase", "CONSTANT_CASE"]
              }
            ]
          }
        },
        "useShorthandAssign": "warn",
        "useThrowNewError": "warn",
        "useThrowOnlyError": "warn"
      },
      "suspicious": {
        "noEmptyBlockStatements": "error",
        "useAwait": "error",
        "useErrorMessage": "error"
      }
    }
  },
  "javascript": {
    "formatter": {
      "quoteStyle": "single"
    }
  },
  "organizeImports": {
    "enabled": true
  },
  "files": {
    "ignore": ["./src/vite-env.d.ts"]
  },
  "css": {
    "parser": {
      "cssModules": true,
      "allowWrongLineComments": true
    }
  }
}
